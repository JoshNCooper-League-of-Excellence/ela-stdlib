impl!<T> Format for Option!<T> {
  fn format(*const self, formatter: *mut Formatter) {
    if formatter.options.typename {
      formatter.writer.appendf("%::", (typeof(Option!<T>).name,), formatter.options.unquoted());
    }
    if self.is_some() {
      formatter.writer.appendf("Some(%)", (self.unwrap(), ), formatter.options);
    } else {
      formatter.writer.append("None()");
    }
  }
}

impl!<_Ok, _Err> Format for Result!<_Ok, _Err> {
  fn format(*const self, formatter: *mut Formatter) {
    if formatter.options.typename {
      formatter.writer.appendf("%::", (typeof(Result!<_Ok, _Err>).name,), formatter.options.unquoted());
    }
    if self is Result!<_Ok, _Err>::Ok(ok) {
      formatter.writer.appendf("Ok(%)", (ok,), formatter.options);
    } else if self is Result!<_Ok, _Err>::Err(err) {
      formatter.writer.appendf("Err(%)", (err,), formatter.options);
    }
  }
}