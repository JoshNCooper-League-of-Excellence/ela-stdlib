// Obviously LIBC is only available when not in a freestanding environment.

// TODO: add a bunch more libc functions as needed.
// this is very limited to what i've done in the language so far and a ton is missing.
#ifndef FREESTANDING {
  #foreign system :: fn(cmd: *const u8) -> s32;

  #foreign free :: fn(ptr: *const void) -> void;
  #foreign malloc :: fn(nbytes: u64) -> *mut void;
  #foreign calloc :: fn(num: u64, size: u64) -> *mut void;
  #foreign realloc :: fn(ptr: *const void, size: u64) -> *mut void;

  #foreign printf :: fn(format: *const u8, ...) -> s32;
  #foreign exit :: fn(code: s32);

  #foreign scanf :: fn(format: *const u8, ...) -> s32;
  #foreign getchar :: fn() -> s32;

  #foreign sleep :: fn(seconds: s32);
  #foreign usleep :: fn(c: s32);

  #foreign snprintf :: fn(buffer: *const u8, buffer_size: u64, format: *const u8, ...) -> s32;
  #foreign sprintf :: fn(buffer: *const u8, format: *const u8, ...) -> s32;
  
  #foreign strdup :: fn(s: *const u8) -> *mut u8;
  #foreign strndup :: fn(s: *const u8, n: u64) -> *mut u8;
  #foreign strerror :: fn(errnum: s32) -> *mut u8;

  #foreign strtok :: fn(s: *const u8, delim: *const u8) -> *mut u8;
  #foreign strcat :: fn(dest: *const u8, src: *const u8) -> *mut u8;
  #foreign strncat :: fn(dest: *const u8, src: *const u8, n: u64) -> *mut u8;

  #foreign atoi :: fn(v: *const u8) -> s32;
  #foreign atof :: fn(v: *const u8) -> f64;

  // TODO: try this again?
  // When I implement this myself, we get a `std::bad_alloc` in my nvidia driver.
  // I'm pretty sure the implementation was correct, but, whatever.
  #foreign memmove :: fn(dest: *const void, src: *const void, nbytes: s64) -> s32;
  #foreign memcpy :: fn(dest: *const void, src: *const void, n: u64) -> *mut void;
  #foreign memset :: fn(dest: *const void, c: s32, n: u64) -> *mut void;
  #foreign strncmp :: fn(s: *const u8, str2: *const u8, len: s32) -> s32;
  #foreign strcmp :: fn(str1: *const u8, str2: *const u8) -> s32;
  #foreign strlen :: fn(string: *const u8) -> u32;
  #foreign memcmp :: fn(ptr1: *const void, ptr2: *const void, n: u64) -> s32;
}

#foreign isalnum :: fn(c: s32) -> s32;
#foreign isalpha :: fn(c: s32) -> s32;
#foreign isspace :: fn(c: s32) -> s32;
#foreign isdigit :: fn(c: s32) -> s32;
#foreign islower :: fn(c: s32) -> s32;
#foreign isupper :: fn(c: s32) -> s32;
#foreign isprint :: fn(c: s32) -> s32;
#foreign ispunct :: fn(c: s32) -> s32;
#foreign isxdigit :: fn(c: s32) -> s32;
#foreign iscntrl :: fn(c: s32) -> s32;
#foreign isgraph :: fn(c: s32) -> s32;
#foreign tolower :: fn(c: s32) -> s32;
#foreign toupper :: fn(c: s32) -> s32;
