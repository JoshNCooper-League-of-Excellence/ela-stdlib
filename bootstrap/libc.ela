// Obviously LIBC is only available when not in a freestanding environment.

// TODO: add a bunch more libc functions as needed.
// this is very limited to what i've done in the language so far and a ton is missing.
#ifndef FREESTANDING {
  #foreign fn system(cmd: *const u8) -> s32;

  #foreign fn free(ptr: *const void) -> void;
  #foreign fn malloc(nbytes: u64) -> *mut void;
  #foreign fn calloc(num: u64, size: u64) -> *mut void;
  #foreign fn realloc(ptr: *const void, size: u64) -> *mut void;

  #foreign fn printf(format: *const u8, ...) -> s32;
  #foreign fn exit(code: s32);

  #foreign fn scanf(format: *const u8, ...) -> s32;
  #foreign fn getchar() -> s32;

  #foreign fn sleep(seconds: s32);
  #foreign fn usleep(c: s32);

  #foreign fn snprintf(buffer: *const u8, buffer_size: u64, format: *const u8, ...) -> s32;
  #foreign fn sprintf(buffer: *const u8, format: *const u8, ...) -> s32;
  
  #foreign fn strdup(s: *const u8) -> *mut u8;
  #foreign fn strndup(s: *const u8, n: u64) -> *mut u8;
  #foreign fn strerror(errnum: s32) -> *mut u8;

  #foreign fn strtok(s: *const u8, delim: *const u8) -> *mut u8;
  #foreign fn strcat(dest: *const u8, src: *const u8) -> *mut u8;
  #foreign fn strncat(dest: *const u8, src: *const u8, n: u64) -> *mut u8;

  #foreign fn atoi(v: *const u8) -> s32;
  #foreign fn atof(v: *const u8) -> f64;

  // TODO: try this again?
  // When I implement this myself, we get a `std::bad_alloc` in my nvidia driver.
  // I'm pretty sure the implementation was correct, but, whatever.
  #foreign fn memmove(dest: *const void, src: *const void, nbytes: s64) -> s32;
  #foreign fn memcpy(dest: *const void, src: *const void, n: u64) -> *mut void;
  #foreign fn memset(dest: *const void, c: s32, n: u64) -> *mut void;
  #foreign fn strncmp(s: *const u8, str2: *const u8, len: s32) -> s32;
  #foreign fn strcmp(str1: *const u8, str2: *const u8) -> s32;
  #foreign fn strlen(string: *const u8) -> u32;
  #foreign fn memcmp(ptr1: *const void, ptr2: *const void, n: u64) -> s32;
}

#foreign fn isalnum(c: s32) -> s32;
#foreign fn isalpha(c: s32) -> s32;
#foreign fn isspace(c: s32) -> s32;
#foreign fn isdigit(c: s32) -> s32;
#foreign fn islower(c: s32) -> s32;
#foreign fn isupper(c: s32) -> s32;
#foreign fn isprint(c: s32) -> s32;
#foreign fn ispunct(c: s32) -> s32;
#foreign fn isxdigit(c: s32) -> s32;
#foreign fn iscntrl(c: s32) -> s32;
#foreign fn isgraph(c: s32) -> s32;
#foreign fn tolower(c: s32) -> s32;
#foreign fn toupper(c: s32) -> s32;
