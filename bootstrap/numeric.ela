/* 
  * Marker traits for numerical _type constraints.
*/

trait IsNumeric {
  fn max_value() -> Self;
  fn min_value() -> Self;
}

impl IsNumeric for u8 {
  fn min_value() -> u8 => 0;
  fn max_value() -> u8 => 255;
}

impl IsNumeric for u16 {
  fn min_value() -> u16 => 0;
  fn max_value() -> u16 => 65535;
}

impl IsNumeric for u32 {
  fn min_value() -> u32 => 0;
  fn max_value() -> u32 => 4294967295;
}

impl IsNumeric for u64 {
  fn min_value() -> u64 => 0;
  fn max_value() -> u64 => 18446744073709551615;
}

impl IsNumeric for s8 {
  fn min_value() -> s8 => -128;
  fn max_value() -> s8 => 127;
}

impl IsNumeric for s16 {
  fn min_value() -> s16 => -32768;
  fn max_value() -> s16 => 32767;
}

impl IsNumeric for s32 {
  fn min_value() -> s32 => -2147483648;
  fn max_value() -> s32 => 2147483647;
}

impl IsNumeric for s64 {
  fn min_value() -> s64 => -9223372036854775808;
  fn max_value() -> s64 => 9223372036854775807;
}

impl IsNumeric for f32 {
  fn min_value() -> f32 => -340282350000000000000000000000000000000.0;
  fn max_value() -> f32 => 340282350000000000000000000000000000000.0;
}
impl IsNumeric for f64 {
  fn min_value() -> f64 => -179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0;
  fn max_value() -> f64 => 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0;
}

trait IsFloat {
  fn epsilon() -> Self;
}

impl IsFloat for f32 {
  fn epsilon() -> f32 => 0.00000011920929;
}
impl IsFloat for f64 {
  fn epsilon() -> f64 => 0.0000000000000002220446049250313;
}

trait IsInteger {}

impl IsInteger for u8 {}
impl IsInteger for u16 {}
impl IsInteger for u32 {}
impl IsInteger for u64 {}

impl IsInteger for s8 {}
impl IsInteger for s16 {}
impl IsInteger for s32 {}
impl IsInteger for s64 {}